name: Build Server Binaries

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created]
  repository_dispatch:
    types: [release-created]

jobs:
  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: linux-binaries
          - os: macos-latest
            artifact_name: darwin-binaries

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag for upload
        id: get_tag
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "Using tag: ${{ github.event.client_payload.tag }}"
          echo "release_tag=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build on macOS
        if: matrix.os == 'macos-latest'
        working-directory: packages/server
        run: |
          mkdir -p dist
          bun build --compile --minify --sourcemap --bytecode ./index.ts --compile --outfile dist/leb-darwin-arm64

      - name: Build on Linux
        if: matrix.os == 'ubuntu-latest'
        working-directory: packages/server
        run: |
          mkdir -p dist
          bun build --compile --minify --sourcemap --bytecode --target=bun-linux-x64-modern ./index.ts --outfile dist/leb-linux-x64
          bun build --compile --minify --sourcemap --bytecode --target=bun-linux-arm64 ./index.ts --outfile dist/leb-linux-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: packages/server/dist/leb-*

      - name: Upload to GitHub release (standard release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages/server/dist/leb-*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload to GitHub release (from dispatch)
        if: github.event_name == 'repository_dispatch'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages/server/dist/leb-*
          file_glob: true
          tag: ${{ steps.get_tag.outputs.release_tag }}
          overwrite: true

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag for upload
        id: get_tag
        if: github.event_name == 'repository_dispatch'
        shell: bash
        run: |
          echo "Using tag: ${{ github.event.client_payload.tag }}"
          echo "release_tag=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # NOTE: does not seems to work, runner on Windows is always slower than Linux
      - name: Setup Bun cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-bun-cache

      - name: Install dependencies
        run: bun install

      - name: Build Windows binary
        working-directory: packages/server
        run: |
          mkdir -p dist
          bun build --compile --minify --sourcemap --bytecode --target=bun-windows-x64-modern ./index.ts --outfile dist/leb-windows-x64.exe

      - name: Sign Windows binary with Trusted Signing
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: ${{ secrets.AZURE_SIGNING_ACCOUNT_NAME }}
          certificate-profile-name: ${{ secrets.AZURE_CERTIFICATE_PROFILE_NAME }}
          files-folder: packages/server/dist
          files-folder-filter: exe
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: packages/server/dist/leb-windows-x64.exe

      - name: Upload to GitHub release (standard release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages/server/dist/leb-windows-x64.exe
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload to GitHub release (from dispatch)
        if: github.event_name == 'repository_dispatch'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages/server/dist/leb-windows-x64.exe
          tag: ${{ steps.get_tag.outputs.release_tag }}
          overwrite: true
